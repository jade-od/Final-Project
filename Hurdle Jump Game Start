extends KinematicBody2D

# Player variables
var speed = 200
var velocity = Vector2()

# Scoring variables
var score = 0
var pointsOnScore = 10
var pointsOnCollision = -10

# UI
var score_label : Label
var cat_sprite : AnimatedSprite

func _ready():
    # Initialize the label and sprite references
    score_label = $Label
    cat_sprite = $AnimatedSprite
    # Set the initial animation
    cat_sprite.play("normal")
    update_score_label()

func _process(delta):
    # Player movement
    velocity.x = speed * Input.get_action_strength("ui_right") - speed * Input.get_action_strength("ui_left")
    move_and_slide(velocity) 

# Collision 
func _on_Cat_body_entered(body):
    if body.is_in_group("snake"):
        # Snake collision
        decrease_score(pointsOnCollision)
        cat_sprite.play("hurt")  # Switch to the hissing animation
    elif body.is_in_group("points"):
        # Coin/Points item  
        increase_score(pointsOnScore)

func increase_score(points):
    score += points
    update_score_label()
    print("Score: ", score)

func decrease_score(points):
    score += points
    update_score_label()
    print("Score: ", score)

func update_score_label(): # Updates score
    score_label.text = "Score: " + str(score)

#game 2 psysics already in game.. cut and removed for later? idk if we'll need. 
const SPEED = 300.0
const JUMP_VELOCITY = -400.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting("physics/2d/default_gravity")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed("ui_accept") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis("ui_left", "ui_right")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()







